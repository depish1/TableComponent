{"version":3,"sources":["components/Filter/Filter.styles.ts","components/Filter/Filter.tsx","components/SortIcon/SortIcon.styles.ts","components/SortIcon/SortIcon.tsx","components/TableHeader/TableHeader.styles.ts","components/TableHeader/TableHeader.tsx","components/TableRow/TableRow.styles.ts","components/TableRow/TableRow.tsx","components/Button/Button.styles.ts","components/Button/Button.tsx","styles/theme.ts","components/Modal/Modal.styles.ts","components/Modal/Modal.tsx","utils/helpers.ts","components/TableComponent/TableComponent.styles.ts","components/TableComponent/TableComponent.tsx","utils/exampleData.ts","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["StyledFilter","styled","label","Filter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","useState","value","setValue","onChange","useAsyncDebounce","value2","undefined","e","target","placeholder","style","fontSize","border","StyledSortIcon","div","theme","isSorted","isSortedDesc","colors","white","grey","SortIcon","props","StyledTableHeader","thead","headerBackground","headerBackgroundHover","breakpoints","mobile","borderRadius","HeaderWrapper","TableHeader","headerGroups","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","StyledTableRow","tr","secondaryBackground","ButtonsWrapper","TableRow","row","getRowProps","cells","cell","id","getCellProps","StyledButton","button","p","color","Button","text","handler","onClick","black","background","deleteColor","editColor","addColor","StyledModal","modalContainer","document","querySelector","validationSchema","yup","shape","employeFirstName","required","employeLastName","employePosition","employeDep","employeSalary","Modal","closeHandler","dataset","modalNode","createElement","useEffect","appendChild","removeChild","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","errors","formState","createPortal","onSubmit","x","console","log","type","name","className","message","getNewId","data","reduce","prev","curr","employeId","filterEmployesDataById","filter","employe","TableContainer","StyledTableComponent","table","TableComponent","columns","setData","isOpen","modalType","modalOption","setModalOption","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","rows","prepareRow","state","visibleColumns","closeModalHandler","values","newData","deleteHandler","Header","accessor","exampleData","employeAge","GlobalStyle","createGlobalStyle","Container","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c187efe.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledFilter = styled.label``;\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { useAsyncDebounce, Row } from 'react-table';\r\nimport { StyledFilter } from './Filter.styles';\r\n\r\ninterface Props {\r\n  preGlobalFilteredRows: Row<IEmployerData>[];\r\n  globalFilter: any;\r\n  setGlobalFilter: (filterValue: any) => void;\r\n}\r\n\r\nconst Filter: FunctionComponent<Props> = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) => {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value2) => {\r\n    setGlobalFilter(value2 || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <StyledFilter>\r\n      Search:{' '}\r\n      <input\r\n        value={value || ''}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        style={{\r\n          fontSize: '1.1rem',\r\n          border: '0',\r\n        }}\r\n      />\r\n    </StyledFilter>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  isSortedDesc: boolean | undefined;\r\n  isSorted: boolean;\r\n}\r\n\r\nexport const StyledSortIcon = styled.div<Props>`\r\n  height: 1em;\r\n  width: 1em;\r\n  position: relative;\r\n  margin-left: 0.5rem;\r\n\r\n  &::after,\r\n  &::before {\r\n    border: 0.4em solid transparent;\r\n    content: '';\r\n    display: block;\r\n    height: 0;\r\n    right: 25%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    position: absolute;\r\n    width: 0;\r\n  }\r\n\r\n  &::before {\r\n    border-bottom-color: ${({ theme, isSorted, isSortedDesc }) =>\r\n      isSorted ? (!isSortedDesc ? theme.colors.grey : theme.colors.white) : theme.colors.grey};\r\n    margin-top: -0.4em;\r\n  }\r\n  &::after {\r\n    border-top-color: ${({ theme, isSorted, isSortedDesc }) =>\r\n      isSorted ? (isSortedDesc ? theme.colors.grey : theme.colors.white) : theme.colors.grey};\r\n    margin-top: 0.6em;\r\n  }\r\n`;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { StyledSortIcon } from 'components/SortIcon/SortIcon.styles';\r\n\r\ninterface Props {\r\n  isSortedDesc: boolean | undefined;\r\n  isSorted: boolean;\r\n}\r\nconst SortIcon: FunctionComponent<Props> = (props) => {\r\n  return <StyledSortIcon {...props} />;\r\n};\r\n\r\nexport default SortIcon;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTableHeader = styled.thead`\r\n  background-color: ${({ theme }) => theme.colors.headerBackground};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  th {\r\n    padding: 1rem 0.7rem;\r\n    text-align: center;\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.colors.headerBackgroundHover};\r\n    }\r\n\r\n    &:last-child:hover {\r\n      background-color: ${({ theme }) => theme.colors.headerBackground};\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: ${({ theme }) => theme.borderRadius};\r\n    overflow: hidden;\r\n    tr {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr 1fr 1fr;\r\n      width: 100%;\r\n\r\n      @media only screen and (max-width: 500px) {\r\n        grid-template-columns: 1fr 1fr;\r\n      }\r\n    }\r\n\r\n    th {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n","import React, { FunctionComponent } from 'react';\r\nimport SortIcon from 'components/SortIcon/SortIcon';\r\nimport { HeaderGroup, ColumnInstance, TableState, Row } from 'react-table';\r\n\r\nimport { StyledTableHeader, HeaderWrapper } from './TableHeader.styles';\r\n\r\ninterface Props {\r\n  headerGroups: HeaderGroup<IEmployerData>[];\r\n  visibleColumns: ColumnInstance<IEmployerData>[];\r\n  state: TableState<IEmployerData>;\r\n  preGlobalFilteredRows: Row<IEmployerData>[];\r\n  setGlobalFilter: (filterValue: any) => void;\r\n  children: React.ReactNode;\r\n}\r\nconst TableHeader: FunctionComponent<Props> = ({ headerGroups, children }) => {\r\n  return (\r\n    <StyledTableHeader>\r\n      {headerGroups.map((headerGroup) => (\r\n        <tr {...headerGroup.getHeaderGroupProps()}>\r\n          {headerGroup.headers.map((column) => (\r\n            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n              <HeaderWrapper>\r\n                {column.render('Header')}\r\n                <SortIcon isSorted={column.isSorted} isSortedDesc={column.isSortedDesc} />\r\n              </HeaderWrapper>\r\n            </th>\r\n          ))}\r\n          <th>{children}</th>\r\n        </tr>\r\n      ))}\r\n    </StyledTableHeader>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTableRow = styled.tr`\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:nth-child(even) {\r\n    background: ${({ theme }) => theme.colors.secondaryBackground};\r\n  }\r\n\r\n  td {\r\n    padding: 1rem 0.7rem;\r\n    text-align: center;\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    display: block;\r\n    border-top: 1px solid #eee;\r\n    border-bottom: 1px solid #eee;\r\n    margin-top: 1rem;\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: ${({ theme }) => theme.borderRadius};\r\n    overflow: hidden;\r\n    &:nth-child(even) {\r\n      background-color: ${({ theme }) => theme.colors.white};\r\n    }\r\n\r\n    td {\r\n      display: flex;\r\n      justify-content: center;\r\n      border: none;\r\n      position: relative;\r\n      padding-left: 50%;\r\n      width: 100%;\r\n\r\n      &:before {\r\n        display: block;\r\n        text-align: left;\r\n        padding: 1rem;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 45%;\r\n        height: 100%;\r\n        background-color: ${({ theme }) => theme.colors.headerBackground};\r\n        color: ${({ theme }) => theme.colors.white};\r\n        font-weight: bold;\r\n      }\r\n\r\n      &:nth-child(even) {\r\n        background-color: ${({ theme }) => theme.colors.secondaryBackground};\r\n\r\n        &:before {\r\n          background-color: ${({ theme }) => theme.colors.headerBackgroundHover};\r\n        }\r\n      }\r\n\r\n      &:nth-of-type(1):before {\r\n        content: 'Id:';\r\n      }\r\n      &:nth-of-type(2):before {\r\n        content: 'Imię:';\r\n      }\r\n      &:nth-of-type(3):before {\r\n        content: 'Nazwisko:';\r\n      }\r\n      &:nth-of-type(4):before {\r\n        content: 'Wiek:';\r\n      }\r\n      &:nth-of-type(5):before {\r\n        content: 'Stanowisko:';\r\n      }\r\n      &:nth-of-type(6):before {\r\n        content: 'Dział:';\r\n      }\r\n      &:nth-of-type(7):before {\r\n        content: 'Pensja:';\r\n      }\r\n      &:nth-of-type(8):before {\r\n        content: '';\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Row } from 'react-table';\r\nimport { StyledTableRow, ButtonsWrapper } from './TableRow.styles';\r\n\r\ninterface Props {\r\n  row: Row<IEmployerData>;\r\n  children: React.ReactNode;\r\n}\r\nconst TableRow: FunctionComponent<Props> = ({ row, children }) => {\r\n  return (\r\n    <StyledTableRow {...row.getRowProps()}>\r\n      {row.cells.map((cell) => {\r\n        if (cell.column.id === 'employeSalary') return <td {...cell.getCellProps()}>{`${cell.value} zł`}</td>;\r\n        return <td {...cell.getCellProps()}>{cell.value}</td>;\r\n      })}\r\n      <td>\r\n        <ButtonsWrapper>{children}</ButtonsWrapper>\r\n      </td>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  color: string;\r\n}\r\n\r\nexport const StyledButton = styled.button<Props>`\r\n  padding: 0.5rem;\r\n  background-color: ${(p) => p.color};\r\n  cursor: pointer;\r\n  color: white;\r\n  border: 3px solid ${(p) => p.color};\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  font-weight: bold;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\r\n  transition: 0.2s ease-in-out;\r\n  margin: 0 0.2rem;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    color: ${(p) => p.color};\r\n  }\r\n`;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { StyledButton } from './Button.styles';\r\n\r\ninterface Props {\r\n  text: string;\r\n  color: string;\r\n  handler?: () => void;\r\n}\r\n\r\nconst Button: FunctionComponent<Props> = ({ text, handler, color }) => {\r\n  return (\r\n    <StyledButton color={color} onClick={handler}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const theme = {\r\n  colors: {\r\n    black: '#3e3d3d',\r\n    white: '#ffffff',\r\n    grey: '#aaa',\r\n    background: '#ffffff',\r\n    secondaryBackground: '#ebebeb',\r\n    headerBackground: '#324a5f',\r\n    headerBackgroundHover: '#223a4f',\r\n    deleteColor: '#dd1c1a',\r\n    editColor: '#49b6ff',\r\n    addColor: '#2dc653',\r\n  },\r\n  borderRadius: '10px',\r\n  breakpoints: {\r\n    mobile: '950px',\r\n  },\r\n} as const;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledModal = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 600px;\r\n  max-width: 90%;\r\n  min-height: 80vh;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\nimport Button from 'components/Button/Button';\r\nimport { theme } from 'styles/theme';\r\nimport { createPortal } from 'react-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { StyledModal } from './Modal.styles';\r\n\r\nconst modalContainer = document.querySelector('#modal-container');\r\n\r\nconst validationSchema = yup.object().shape({\r\n  employeFirstName: yup.string().required('Imię jest wymagane'),\r\n  employeLastName: yup.string().required('Nazwisko jest wymagane'),\r\n  employePosition: yup.string().required('Stanowisko jest wymagane'),\r\n  employeDep: yup.string().required('Dział jest wymagany'),\r\n  employeSalary: yup.number().required('Pensja jest wymagana'),\r\n});\r\n\r\ninterface Props {\r\n  dataset?: IEmployerData;\r\n  id: number;\r\n  closeHandler: () => void;\r\n}\r\n\r\ninterface IFormInputs {\r\n  employeFirstName: string;\r\n  employeLastName: string;\r\n  employePosition: string;\r\n  employeDep: string;\r\n  employeSalary: number;\r\n}\r\nconst Modal: FunctionComponent<Props> = ({ closeHandler, id, dataset = undefined }) => {\r\n  const modalNode = document.createElement('div');\r\n  useEffect(() => {\r\n    modalContainer!.appendChild(modalNode);\r\n    return () => {\r\n      modalContainer!.removeChild(modalNode);\r\n    };\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInputs>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: dataset,\r\n  });\r\n\r\n  const onSubmit = (x: any): void => {\r\n    console.log(x);\r\n  };\r\n  return createPortal(\r\n    <StyledModal>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input {...register('employeFirstName')} type=\"text\" id=\"employeFirstName\" name=\"employeFirstName\" />\r\n        <span className=\"error\">{errors.employeFirstName?.message}</span>\r\n        <input {...register('employeLastName')} type=\"text\" id=\"employeLastName\" name=\"employeLastName\" />\r\n        <span className=\"error\">{errors.employeLastName?.message}</span>\r\n        <input {...register('employePosition')} type=\"text\" id=\"employePosition\" name=\"employePosition\" />\r\n        <span className=\"error\">{errors.employePosition?.message}</span>\r\n        <input {...register('employeDep')} type=\"text\" id=\"employeDep\" name=\"employeDep\" />\r\n        <span className=\"error\">{errors.employeDep?.message}</span>\r\n        <input {...register('employeSalary')} type=\"number\" id=\"employeSalary\" name=\"employeSalary\" />\r\n        <span className=\"error\">{errors.employeSalary?.message}</span>\r\n        <Button text=\"Wyślij\" color={theme.colors.addColor} />\r\n      </form>\r\n      <Button text=\"Anuluj\" handler={closeHandler} color={theme.colors.deleteColor} />\r\n    </StyledModal>,\r\n    modalNode\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export const getNewId = (data: IEmployerData[]): number => {\r\n  const maxIdObj = data.reduce((prev, curr) => {\r\n    return prev.employeId < curr.employeId ? curr : prev;\r\n  });\r\n\r\n  return maxIdObj.employeId + 1;\r\n};\r\nexport const filterEmployesDataById = (data: IEmployerData[], id: number): IEmployerData => {\r\n  return data.filter((employe) => employe.employeId !== id)[0];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const TableContainer = styled.div`\r\n  padding: 1rem;\r\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    max-width: 600px;\r\n  }\r\n`;\r\n\r\nexport const StyledTableComponent = styled.table`\r\n  width: 100%;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-collapse: separate;\r\n  border-spacing: 0;\r\n\r\n  tr:last-child td:first-child {\r\n    border-bottom-left-radius: ${({ theme }) => theme.borderRadius};\r\n  }\r\n\r\n  tr:last-child td:last-child {\r\n    border-bottom-right-radius: ${({ theme }) => theme.borderRadius};\r\n  }\r\n  tr:first-child th:first-child {\r\n    border-top-left-radius: ${({ theme }) => theme.borderRadius};\r\n  }\r\n\r\n  tr:first-child th:last-child {\r\n    border-top-right-radius: ${({ theme }) => theme.borderRadius};\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    display: block;\r\n    box-shadow: none;\r\n\r\n    tbody {\r\n      width: 100%;\r\n    }\r\n    thead,\r\n    tbody,\r\n    td {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport Filter from 'components/Filter/Filter';\r\nimport TableHeader from 'components/TableHeader/TableHeader';\r\nimport TableRow from 'components/TableRow/TableRow';\r\nimport Button from 'components/Button/Button';\r\nimport Modal from 'components/Modal/Modal';\r\n\r\nimport { theme } from 'styles/theme';\r\nimport { useTable, useSortBy, useFilters, useGlobalFilter } from 'react-table';\r\nimport { getNewId, filterEmployesDataById } from 'utils/helpers';\r\nimport { StyledTableComponent, TableContainer } from './TableComponent.styles';\r\n\r\ninterface Props {\r\n  columns: any;\r\n  dataset: Array<IEmployerData>;\r\n}\r\n\r\nconst TableComponent: FunctionComponent<Props> = ({ dataset, columns }) => {\r\n  const [data, setData] = useState(dataset);\r\n  const [modalOption, setModalOption] = useState({ isOpen: false, modalType: '' });\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, visibleColumns, preGlobalFilteredRows, setGlobalFilter } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useFilters,\r\n      useGlobalFilter,\r\n      useSortBy\r\n    );\r\n\r\n  const deleteHandler = (id: number): void => {\r\n    const newData = data.filter((row) => row.employeId !== id);\r\n    setData(newData);\r\n  };\r\n\r\n  const closeModalHandler = (): void => {\r\n    setModalOption({ isOpen: false, modalType: '' });\r\n  };\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Filter preGlobalFilteredRows={preGlobalFilteredRows} globalFilter={state.globalFilter} setGlobalFilter={setGlobalFilter} />\r\n      <StyledTableComponent {...getTableProps()}>\r\n        <TableHeader\r\n          headerGroups={headerGroups}\r\n          visibleColumns={visibleColumns}\r\n          state={state}\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          setGlobalFilter={setGlobalFilter}\r\n        >\r\n          <Button text=\"Dodaj\" handler={() => setModalOption({ isOpen: true, modalType: 'add' })} color={theme.colors.addColor} />\r\n          {modalOption.isOpen && modalOption.modalType === 'add' && <Modal id={getNewId(data)} closeHandler={closeModalHandler} />}\r\n        </TableHeader>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            const id = row.values.employeId;\r\n            return (\r\n              <TableRow key={id} row={row}>\r\n                <Button text=\"Edytuj\" handler={() => setModalOption({ isOpen: true, modalType: 'edit' })} color={theme.colors.editColor} />\r\n                <Button text=\"Usuń\" handler={() => deleteHandler(id)} color={theme.colors.deleteColor} />\r\n                {modalOption.isOpen && modalOption.modalType === 'edit' && (\r\n                  <Modal id={id} dataset={filterEmployesDataById(data, id)} closeHandler={closeModalHandler} />\r\n                )}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </StyledTableComponent>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","export const columns = [\r\n  {\r\n    Header: 'Id',\r\n    accessor: 'employeId',\r\n  },\r\n  {\r\n    Header: 'Imię',\r\n    accessor: 'employeFirstName',\r\n  },\r\n  {\r\n    Header: 'Nazwisko',\r\n    accessor: 'employeLastName',\r\n  },\r\n  {\r\n    Header: 'Wiek',\r\n    accessor: 'employeAge',\r\n  },\r\n  {\r\n    Header: 'Stanowisko',\r\n    accessor: 'employePosition',\r\n  },\r\n  {\r\n    Header: 'Dział',\r\n    accessor: 'employeDep',\r\n  },\r\n  {\r\n    Header: 'Pensja',\r\n    accessor: 'employeSalary',\r\n  },\r\n];\r\n\r\nexport const exampleData = [\r\n  {\r\n    employeId: 13456,\r\n    employeFirstName: 'Jan',\r\n    employeLastName: 'Kowalski',\r\n    employeAge: 38,\r\n    employePosition: 'IT Manager',\r\n    employeDep: 'IT',\r\n    employeSalary: 9000,\r\n  },\r\n  {\r\n    employeId: 13457,\r\n    employeFirstName: 'Matylda',\r\n    employeLastName: 'Nowak',\r\n    employeAge: 26,\r\n    employePosition: 'Receptionist',\r\n    employeDep: 'Administration',\r\n    employeSalary: 4500,\r\n  },\r\n  {\r\n    employeId: 13458,\r\n    employeFirstName: 'Rafał',\r\n    employeLastName: 'Ratajczyk',\r\n    employeAge: 29,\r\n    employePosition: 'IT Specialist',\r\n    employeDep: 'IT',\r\n    employeSalary: 6000,\r\n  },\r\n  {\r\n    employeId: 13459,\r\n    employeFirstName: 'Sebastian',\r\n    employeLastName: 'Michniewicz',\r\n    employeAge: 26,\r\n    employePosition: 'QA Specialist',\r\n    employeDep: 'IT',\r\n    employeSalary: 7000,\r\n  },\r\n  {\r\n    employeId: 13460,\r\n    employeFirstName: 'Anna',\r\n    employeLastName: 'Rak',\r\n    employeAge: 44,\r\n    employePosition: 'Accountant',\r\n    employeDep: 'Finance',\r\n    employeSalary: 7500,\r\n  },\r\n  {\r\n    employeId: 13461,\r\n    employeFirstName: 'Magdalena',\r\n    employeLastName: 'Jakicka',\r\n    employeAge: 32,\r\n    employePosition: 'Marketing Specialist',\r\n    employeDep: 'Marketing',\r\n    employeSalary: 5000,\r\n  },\r\n  {\r\n    employeId: 13462,\r\n    employeFirstName: 'Justyna',\r\n    employeLastName: 'Patucka',\r\n    employeAge: 36,\r\n    employePosition: 'Marketing Manager',\r\n    employeDep: 'Marketing',\r\n    employeSalary: 8500,\r\n  },\r\n];\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap');\r\n    html {\r\n        box-sizing: border-box;\r\n        height:100%;\r\n    }\r\n\r\n    *, *::after, *::before {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Roboto Condensed', sans-serif;\r\n        height:100%;\r\n    }\r\n\r\n    a, button {\r\n        font-family: 'Roboto Condensed', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { FunctionComponent } from 'react';\nimport TableComponent from 'components/TableComponent/TableComponent';\nimport { exampleData, columns } from 'utils/exampleData';\nimport { theme } from 'styles/theme';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'styles/GlobalStyles';\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n`;\nconst App: FunctionComponent = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <TableComponent dataset={exampleData} columns={columns} />\n      </Container>\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}